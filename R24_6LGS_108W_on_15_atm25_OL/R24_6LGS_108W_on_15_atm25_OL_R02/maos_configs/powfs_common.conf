#FILE powfs_common.conf
#Gather options regarding WFS that are not specific to a certain telescope or AO implementation. The values are determined from best practice regarding SHWFS. Specific AO instrument may choose to override the values permanently or temporarily for testing purpose.
__default__	      #this file contains default setup.

#The same value applies to LGS, NGS High, or NGS lo order WFS.
#Most entry has only one number that will be duplicated for different powfs types.
powfs.noisy     = [1]  #noisy detector in simulation.
powfs.dtrat     = [1]  #sampling period relative to 1/sim.dt. >=1
powfs.moao      = [-1] #index into moao config. -1 mean no moao.
#Used for wavefront reconstruction 
powfs.frs       = [0]  #Global focus removal flag. 1 for LGS, 0 for NGS. 1 requires recon.splitlrt=1 to perform well
powfs.ncpa      = []   #Additional NCPA opd for each powfs. 2xn; first row is rms in meter, second row is zernike mode or negative for power law.
					 #powfs.ncpa=["rms zmode",,] to put abs(rms) of zernike zmod OPD on LGS. randomized unless rm<0.
powfs.ncpa_method=[-1]#Method to correct ncpa; 0: do nothing. 1: apply gradient bias using bias OPD. 2: apply bias according to i0 (with bias OPD). -1: auto=>1 for cog, 2 for mtch.

#Entries here belong to PyWFS only
powfs.modulate  = [5]  #Pyramid WFS modulation radius in max(wvl)/D (was in diameter before May 22,2015)
powfs.modulpos  = [16] #Number of positions per modulation cycle. 2020-02-26: 32->16 following NFIRAOS VNW change.
powfs.modulring = [1]  #Number of rings within the maximum radius to modulate

#ALl entries below this only applies to SHWFS
powfs.saloc     = [""]  #load saloc from file for each powfs.
powfs.misregx	= [0]   #offset of saloc from pupil illumination in unit of dsa
powfs.misregy	= [0]   #offset of saloc from pupil illumination in unit of dsa
powfs.amp       = [""] #load amp from file for each powfs.
powfs.neareconfile=[""] #file contains NEA for each SA. takes precedence. File name takes same format as piinfile. in radian unit. (takes precedance)
powfs.neasim    = [-1] # geometric only: nea in mas for simulation. -1 to match nearecon (not neareconfile).
powfs.neasimfile= [""] # read NEA used in simulation from file. Defined at  sim.dt sampling rate, in radian. neasim must be -1
powfs.neaphy    = [0]  # 1: use nea from matched filter in geometric simulations.

#The following only applies to physical optics SHWFS and are automatically ignored for Other kind of WFS
powfs.neaextra= [0]  # additional noise equivalent angle in mas to be added to matched filter estimation of nea.
powfs.neamin  = [0]  # minimum noise equivalent angle in mas to limit matched filter estimation of nea.
powfs.radpix  = [0]  # positive: number of pixels along radial direction. 0: disable radial coordinate pixel arrangement.
powfs.radpixtheta=[0]  # CCD Pixel size along radiual direction.
powfs.radgx     = [1]  # Create gx, gy along radial/azimuthal direction if polar coordinate detector.
powfs.pixblur   = [0.3]# PSF blurring sigma in unit of pixel size (e.g., due to charge diffusion). 
powfs.notf    = [0]  #specify FFT grid size in WFS sensor imaging. 0: automatic. 
powfs.pixoffx = [0]  #offset of psf center from pixel vertex.
powfs.pixoffy = [0]  #offset of psf center from pixel vertex.
powfs.i0scale = [0]  #scale sum of averaged image intensity generated using turbulence OTF to match normalized subaperture area. This is used to build matched filter.
powfs.i0save  = [0]  #save time avearged subaperture images.
powfs.i0load  = [""] #load i0,gx,gy from this folder.
powfs.siglev  = [960] #signal level at sim.dtref=1/600 (updated to 960 for LGS WFS 2021-11-02)
powfs.sigrecon= [0]  #siglev used for NEA computation. 0: use siglev.
powfs.sigscale= [1]  #scale factor from the wfs.siglev to wfs.siglevsim for simulation. to simulate signal variation/mismatch
powfs.bkgrnd  = [0]  #sky background in unit e/pixel/frame at sim.dt.
powfs.bkgrndc = [1]  #background correction factor for powfs.bkgrnd. 1: DC component fully removed.
powfs.bkgrndfn= [""] #sky background/rayleigh backscatter image for each subaperture in each wfs. at sim.dt
powfs.bkgrndfnc=[""] #estimation of bkgrndfn that will be subtracted.
powfs.qe       =[""] #Quantum efficiency scaling of pixels in each subaperture. Calibrated by flat fielding. Set maximum to 1.
powfs.embfac  = [2]  #embeding factor of complex pupil function to generate subaperture image using FFT method. keep at 2
powfs.psfout  = [0]  #output complex psf core for sky coverage. only valid in split tomography, do ideal compensation of NGS modes.
powfs.pistatout = [0] #output tip/tilt removed averaged psf for later #matched filter input
powfs.pistatstc = [0] #shift pistat to center using fft method.
powfs.pistatstart=[20]#first time step to start output pistat
powfs.piinfile  = [""]#pixel intensities input file prefix. Mainly used for NGS. If seed is 1, and pistatout=[0 1 1], the program outputs pistat_seed1_wfs[678].bin. Put here powfs.piinfile=["" "pistat_see1" "pistat_seed1"] here and set pistatout=[0 0 0] to run physical optics NGS simulation. PSF must be centered.
powfs.sninfile  = [""]#speckle noise. not yet used
powfs.phytype_sim= ref:powfs.phytype_recon #physical optics type in simulation. -1 to match phytype_recon
powfs.phytype_sim2=[1] #physical optics type in simulation after dithering update. See powfs.phytype_recon
powfs.phyusenea = [-1] # 1: force use powfs.nearecon in reconstruction in physical optics mode. -1: auto, false for matched filter SHWFS, true for others.

#For dithering
powfs.dither_ogsingle = [0] #Force using single gain update (when dither==1 for SHWFS)
powfs.dither_gdrift   = [0]#Gain for drift control. 0.05 is good for dithering. 0 is good for Na profile fitting
powfs.dither_glpf     = [1] #LPF gain for i0,gx,gy update (matched filter). Keep at 1.

#Advanced options for matched filter
powfs.r0       = [-1] #r0 used for initializing matched filter
powfs.L0       = [-1] #outerscale used for initializing matched filter
powfs.mtchcpl  = [1]  #use coupling between r/a measure error. 0: diagnalize.
powfs.mtchadp  = [0]  #Using adaptive matched filter. Use cr when FWHM>4 pix.
powfs.mtchfft  = [0]  #Compute gx, gy using i0 with FFT derivative instead of PSF.
powfs.cogthres = [0]  #tCoG threshold. -n: n*rne.
powfs.cogoff   = [0]  #tCoG offset to remove. -n: -n*rne.

#to model SHWFS subaperture aberration
powfs.safill2d  = [1] #fill factor of lenslet, in 2-dimensions. Results in photon loss and larger spot.
powfs.saspherical=[0]#spherical aberration at best focus of each lenslet in nm RMS.
powfs.safocuspv = [0] #focus error for each subaperture in nm p/v.
powfs.gradscale = [1]  #Scale CL gradients. 
powfs.hc        = [0]  #Conjugation height of WFS pupil (lenslet).

#Trombone zoom corrector for LGS. Ignored for other WFS.
powfs.zoomshare = [1]    #All WFS in same powfs share the same zoom corrector
powfs.zoomgain  = [0.5]  #gain of zoom corrector for gradient based signal
powfs.zoomgain_drift  = [0.5]  #gain of zoom corrector for i0 based signal
powfs.zoomset   = [1]    #Set zoom position from the beginning. Auto skip when phytypesim==1

#signal level at 800 Hz for fully illuminated subaperture. 
wfs.siglev      = []   #if overriden, powfs.siglev must not be overriden.
#concatenated lists of wavelength weighting.
wfs.wvlwts      = []   #if overriden, powfs.wvlwts must not be overriden.
wfs.fitwt       = [0]  #if >0, include this wfs in fitting.
wfs.delta_hs    = [0] #variation on top of powfs.hs
wfs.delta_hc	= [0] #variation on top of powfs.hc
wfs.sabad       = [""] #list of bad subaperture due to bad detector or lenslet array
